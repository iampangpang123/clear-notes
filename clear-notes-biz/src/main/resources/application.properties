#配置端口号
server.port=8082
#配置数据源
spring.datasource.driver-class-name= com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://118.31.55.236:3306/clearnotes?useUnicode=true&characterEncoding=utf-8&autoReconnect=true
spring.datasource.username = root
spring.datasource.password = 123456





#加载mapper配置文件
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
#将带有下划线的表字段映射为驼峰格式的实体类属性。
mybatis.configuration.map-underscore-to-camel-case=true
##定义别名（这样就不用写类的全限定名了）
mybatis.type-aliases-package=com.example.clear.notes.common.entity
#配置控制台打印sql
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#我们不单独打印sql.上面可以实现控制台打印sql，但是我们通过日志实现(不紧紧可以看到sql打印。还可以看到更全的日志,就是日志有点乱),把日志登记调高到debug
logging.level.root=debug
#mapper.identity=MYSQL



spring.application.name=clear-notes-service
##nacos 配置中心
dubbo.config-center.address=nacos://127.0.0.1:8848
dubbo.config-center.app-name=clear-notes-service
##dubbo 服务扫描包(要扫描接口的实现类的地址)
dubbo.scan.base-packages=com.example.clear.notes.common.api,com.example.clear.notes.biz.service.impl

dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
dubbo.application.name=springboot-user-provider
##nacos 注册中心   用zookeeper只需要把地址改为 zookeeper://127.0.0.1:2181
dubbo.registry.address=nacos://127.0.0.1:8848
nacos.config.server-addr=127.0.0.1:8848

